---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy-example-website
spec:
  params:
  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
    default: "https://github.com/golden-image-example/example-website"
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: main
  - name: nginx-image-name
    type: string
    default: "image-registry.openshift-image-registry.svc:5000/golden-image-example/nginx:1.22"
  - name: php-image-name
    type: string
    default: "image-registry.openshift-image-registry.svc:5000/golden-image-example/php:8.2-fqm"
  - name: k8s-manifest-dir
    description: The directory in source that contains yaml manifests
    type: string
    default: "k8s-rwo-single"
  - name: deployment-name
    type: string
    default: "example-website"
  tasks:
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)
  - name: apply-manifests
    taskRef:
      name: apply-manifests
    params:
    - name: manifest_dir
      value: $(params.k8s-manifest-dir)
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
  - name: update-deployment
    taskRef:
      name: update-deployment
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: container-name
      value: nginx
    - name: IMAGE
      value: $(params.nginx-image-name)
    runAfter:
    - apply-manifests
  - name: wait-for-deployment
    taskRef:
      name: wait-for-deployment
    params:
    - name: deployment
      value: $(params.deployment-name)
    runAfter:
    - update-deployment
  - name: php-make-var-www-html-htdocs-dir
    taskRef:
      name: oc-exec
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: command
      value: "mkdir -m 775 /var/www/html/htdocs/"
    runAfter:
    - wait-for-deployment
  - name: copy-content-pv
    taskRef:
      name: oc-rsync
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: source-dir
      value: "./htdocs/"
    - name: target-dir
      value: "/var/www/html/htdocs/"
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - php-make-var-www-html-htdocs-dir
  - name: copy-content-php-composer-files
    taskRef:
      name: oc-rsync
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: source-dir
      value: "./composer/"
    - name: target-dir
      value: "/var/www/html/"
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - php-make-var-www-html-htdocs-dir
  - name: php-run-composer
    taskRef:
      name: oc-exec
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: command
      value: "composer install --no-dev --optimize-autoloader --ignore-platform-reqs"
    runAfter:
    - copy-content-php-composer-files
    - copy-content-pv
  workspaces:
    - name: shared-workspace